newMessage = INSERT INTO MESSAGES VALUES (id_seq.nextval,?,SYSTIMESTAMP,?)
newUser = INSERT INTO USERS VALUES (user_id_seq.nextval,?,?,1,3,?)
updateUser = UPDATE USERS SET STATUS_ID = ? WHERE NICK = cast(? as char(10))
last = SELECT * FROM MESSAGES WHERE ROWNUM<=? ORDER BY MESSAGE_ID DESC
getUser = SELECT NICK, ROLE_ID, STATUS_ID, PICTURE FROM USERS WHERE NICK = cast(? as char(14))
isLogin = SELECT DECODE(m.status_id,  '1', 'true', '2', 'true', '4', 'false',  '3', 'false') AS Logged FROM MESSAGES m WHERE m.MESSAGE_ID = (SELECT MAX(Messages.MESSAGE_ID) FROM Messages WHERE Nick = '%s')
isKicked = SELECT DECODE(MT.STATUS_ID, '1', 'false', '2', 'false', '3', 'false', '4', 'true') AS Kicked FROM Messages MT WHERE MT.MESSAGE_ID = (SELECT MAX(Messages.MESSAGE_ID) FROM Messages WHERE Nick = '%s')
isValid = SELECT USER_ID FROM USERS WHERE NICK = cast(? as char(10)) AND PASS = cast(? as char(10))
allLogged = SELECT u.NICK, u.ROLE_ID, u.STATUS_ID from USERS u where u.STATUS_ID = ?
allKicked = SELECT u.NICK, u.ROLE_ID, u.STATUS_ID from USERS u where u.STATUS_ID = ?
role = SELECT name FROM ROLES WHERE ID IN (SELECT ROLE_ID FROM USERS WHERE NICK=cast(? as char(14)))
isLogin2 = SELECT CASE WHEN MT.STATUS_ID IN (1,2) THEN 'true' ELSE 'false' END as "LOGSTATUS" FROM Messages MT WHERE MT.MESSAGE_ID = (SELECT MAX(MESSAGE_ID) FROM Messages WHERE Nick = ?)
loginF = %s logged in
logoutF = %s logged out
kickF = %s kicked %s
unkickF = %s unlocked